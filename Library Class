import java.util.Scanner;

/**
 * Write a description of class Library here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Library
{
    Scanner userInput = new Scanner(System.in);
    
    private Book[] bookCollection;
    private int collectionSize;
    private String address;
    private String openingHours;

    //put array of objects as argument to method. this.arrayElement(Object) = objectField. 
    //for (class object : x) { object.getBook() if(getName() = x)) { execute x } )}
    
    // Constructor for objects of class Library
    public Library(String adr)
    {
        address = adr;
        bookCollection = new Book[500];
        collectionSize = 0;
        openingHours = " 9:00 - 21:00 "; //all libraries have the same hours
    }
    
    // Add a book to the library collection
    public void addBook(Book book)
    {
        bookCollection[collectionSize] = book;
        this.collectionSize++;
    }
    
    public void searchBook(String userString) { //case sensitive. must change.
        int resultCounter = 0;
        System.out.printf("\fBooks that match the inserted Keyword '%s'\n", userString);
        
        for (int i=0; i<collectionSize; i++) {
            if ((bookCollection[i].getAuthor().contains(userString)) || (bookCollection[i].getTitle().contains(userString)))
            {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), 
                bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
                resultCounter++;
            } 
        }
        
        if (resultCounter < 1) {
            System.out.printf("None.");
        }
    }
    
    public void searchByBarcode(String userString) { //to finish.
        int resultCounter = 0;
        System.out.printf("\fBooks that match the inserted barcode '%s'\n", userString);
        
         for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getBarcode().contains(userString)) 
            {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), 
                bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
                resultCounter++;
            } 
        }
        
         if (resultCounter < 1) {
            System.out.printf("None.");
        }
    }

    public void searchByTitle(String userString) {
        int resultCounter = 0;
        System.out.printf("\fBooks that match the inserted title '%s'\n", userString);
        
         for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getTitle().contains(userString)) 
            {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), 
                bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
                resultCounter++;
            } 
        }
        
         if (resultCounter < 1) {
            System.out.printf("None.");
        }
    }
    
    public void searchByAuthor (String userString) {
        int resultCounter = 0;
        System.out.printf("\fBooks that match the inserted author '%s'\n", userString);
        
         for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getAuthor().contains(userString)) 
            {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), 
                bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
                resultCounter++;
            } 
        }
        
         if (resultCounter < 1) {
            System.out.printf("None.");
        }
    }
    
    public void searchByShelfNumber (String userString) {
        int resultCounter = 0;
        System.out.printf("\fBooks that match the inserted shelf number '%s'\n", userString);
        
         for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getShelfNumber().contains(userString)) 
            {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), 
                bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
                resultCounter++;
            } 
        }
        
         if (resultCounter < 1) {
            System.out.printf("None.");
        }
    }
    
    public void borrowBook(String userStringParam) {
        boolean barcodeExists = false;

        for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getBarcode().equals(userStringParam.trim())) {
                if (bookCollection[i].isAvailable() == true) {
                    bookCollection[i].borrowBook();
                    System.out.print("\fBook borrowed successfully.");
                    barcodeExists = true;
                    break;
                } else {
                    System.out.print("\fSorry, this book is currently unavailable.");
                    barcodeExists = true;
                }
            } 
        } 
        
        if(barcodeExists == false) {
            System.out.print("\fAre you sure you are inserting the right barcode?");
        } 
    }
    
    public void returnBook(String userStringParam) {
        boolean barcodeExists = false;
        
        for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getBarcode().equals(userStringParam.trim())) {
                if (bookCollection[i].isAvailable() == false) {
                    bookCollection[i].returnBook();
                    System.out.print("\fBook returned successfully.");
                    barcodeExists = true;
                    break;
                } else {
                    System.out.print("\fThis book is not on loan.");
                    barcodeExists = true;
                }
            } 
        } 
        
        if(barcodeExists == false) {
            System.out.print("\fAre you sure you are inserting the right barcode?");
        } 
    }
    
    public void removeBook(String userStringParam) { //can have index out of bounds if [500]
        boolean barcodeExists = false;
        
        for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].getBarcode().equals(userStringParam.trim())) {
                for (int j = (i + 1); j<collectionSize; j++) {
                    bookCollection[j-1] = bookCollection[j]; 
                }
                System.out.print("Book deleted successfully!\n");
                collectionSize--;
                barcodeExists = true;
                break;
            } 
        } 
        
        if(barcodeExists == false) {
            System.out.print("\fAre you sure you are inserting the right barcode?");
        } 
    }
    
    public void showAll() {
        System.out.print("\fList of all books (including available and non-available)\n");
        for (int i =0; i<collectionSize; i++) {
            System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s Available: %s\n", bookCollection[i].getTitle(), bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber(), bookCollection[i].isAvailable());
        }
    }
    
    public void showAvailable() {
        System.out.print("\fList of available books\n");
        
        for (int i=0; i<collectionSize; i++) {
            if (bookCollection[i].isAvailable()) {
                System.out.printf("Title: %s, Author: %s, Barcode: %s, Shelf-number: %s\n", bookCollection[i].getTitle(), bookCollection[i].getAuthor(), bookCollection[i].getBarcode(), bookCollection[i].getShelfNumber());
            }
        }
    }
    
    public void printAuthors() {
        System.out.print("\fList of author names: \n");
        for (int i=0; i<collectionSize; i++) {
                System.out.printf("%s\n", bookCollection[i].getAuthor() );
        }
    }
    
    public void printDistinctAuthors() { //to do
        System.out.print("\fList of (distinct) author names: \n");
        String[] arrayDistinctAuthors;
        
        //either create temp array for authors and check if name already there or do sort algorithm to check if contiguous elements in the array are the same. 
    }
    
    public void printLibraryDetails() {
        System.out.printf("\fDetails of first library\nAddress: %s, Opening times: %s", this.address, this.openingHours);
    }
    
        // add your code here
    
}
